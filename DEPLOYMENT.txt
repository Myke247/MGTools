==============================================
MGTools Deployment Instructions for Claude
==============================================

IMPORTANT: Follow these steps EXACTLY when deploying new versions.

==============================================
1. VERSION UPDATE CHECKLIST
==============================================

Update ALL of the following locations:

A. MGTools.user.js (3 locations):
   - Line 4: @version directive
   - Line 7-8: @updateURL and @downloadURL (use correct branch!)
   - Line ~176: Debug log VERSION message

B. CHANGELOG.md:
   - Add new version section at TOP
   - Include date in format: ## Version X.X.X (YYYY-MM-DD)
   - List all bug fixes, features, improvements

C. README.md (2 locations):
   - Line 3: Version badge
   - Line 5: Version shield image
   - Line ~437: Latest Updates section

==============================================
2. BRANCH-SPECIFIC URLS
==============================================

**For Live-Beta branch:**
@updateURL    https://github.com/Myke247/MGTools/raw/refs/heads/Live-Beta/MGTools.user.js
@downloadURL  https://github.com/Myke247/MGTools/raw/refs/heads/Live-Beta/MGTools.user.js

**For main (Stable) branch:**
@updateURL    https://github.com/Myke247/MGTools/raw/refs/heads/main/MGTools.user.js
@downloadURL  https://github.com/Myke247/MGTools/raw/refs/heads/main/MGTools.user.js

CRITICAL: The IS_LIVE_BETA detection uses updateURL to determine branch!

==============================================
3. VERSION CHECKER BEHAVIOR
==============================================

The version checker shows:
- BETA users: Orange/yellow colors, compares against Live-Beta branch
- STABLE users: Green colors, compares against main branch

Tooltip format:
- "Your Branch (Beta/Stable): vX.X.X"
- "Other Branch (Stable/Beta): vX.X.X"

==============================================
4. BUILD SYSTEM (PHASE 3B)
==============================================

As of 2025-10-24, we have TWO build systems:

A. Mirror Build (PRIMARY - Production):
   npm run build
   → Copies MGTools.user.js to dist/mgtools.user.js
   → This is what users get (1.5MB)
   → Always test this before deploying

B. Modular Build (PARALLEL - Opt-in testing):
   npm run build:esbuild
   → Compiles from src/ modules to dist/mgtools.esbuild.user.js
   → Opt-in only (localStorage.MGTOOLS_ESBUILD_ENABLE = "1")
   → Infrastructure test artifact (121KB)
   → Features still in monolith (being extracted)

IMPORTANT: Mirror build is still PRIMARY. Modular build is for testing.

==============================================
5. CODE QUALITY CHECKS
==============================================

Run these commands BEFORE committing:

A. Format code:
   npx prettier --write MGTools.user.js

B. Check for issues:
   npx eslint MGTools.user.js

Expected: 0 errors, ~158 warnings (style preferences only)

C. Test both builds:
   npm run build           # Mirror (production)
   npm run build:esbuild   # Modular (test artifact)

==============================================
6. GIT COMMIT PROCESS
==============================================

CRITICAL: Use this EXACT commit message format:

git add .
git commit -m "$(cat <<'EOF'
v[VERSION]: [Brief description]

[Detailed changes]
- Change 1
- Change 2
- Change 3

[Optional: Why this matters section]

🤖 Generated with Claude Code
EOF
)"

IMPORTANT: Do NOT add "Co-Authored-By: Claude" trailer
IMPORTANT: Do NOT use --no-verify flag
IMPORTANT: Ensure pre-commit hooks run successfully

==============================================
7. DEPLOYMENT STEPS (Live-Beta)
==============================================

1. Verify current branch:
   git branch
   (Should show: * Live-Beta)

2. Update all version numbers (see Section 1)

3. Run code quality checks (see Section 5)

4. Test both builds (see Section 4):
   npm run build           # Test mirror (primary)
   npm run build:esbuild   # Test modular (parallel)

5. Stage all changes:
   git add MGTools.user.js CHANGELOG.md README.md

6. Commit with proper message (see Section 6)

7. Push to remote:
   git push origin Live-Beta

8. Verify on GitHub:
   - Check https://github.com/Myke247/MGTools/tree/Live-Beta
   - Verify version numbers match everywhere

==============================================
8. COMMON MISTAKES TO AVOID
==============================================

❌ Forgetting to update @updateURL/@downloadURL
❌ Using wrong branch in URLs (main vs Live-Beta)
❌ Not updating debug log version (line 176)
❌ Not updating CHANGELOG.md date
❌ Adding "Co-Authored-By: Claude" to commits
❌ Skipping ESLint/Prettier checks
❌ Committing to wrong branch
❌ Not verifying version checker displays correctly

==============================================
9. VERSION NUMBER GUIDELINES
==============================================

Format: MAJOR.MINOR.PATCH

MAJOR: Breaking changes, major rewrites
MINOR: New features, significant improvements
PATCH: Bug fixes, small improvements

Examples:
- 1.1.0 → 1.1.1 (bug fix)
- 1.1.1 → 1.2.0 (new feature)
- 1.9.9 → 2.0.0 (breaking change)

==============================================
10. EMERGENCY ROLLBACK
==============================================

If a version breaks:

1. Identify last good commit:
   git log --oneline

2. Revert to that commit:
   git reset --hard [commit-hash]

3. Force push (ONLY IN EMERGENCY):
   git push --force origin Live-Beta

4. Notify users via GitHub release notes

==============================================
11. TESTING CHECKLIST
==============================================

Before pushing to Live-Beta:

□ Pet swapping works (full inventory)
□ Pet swapping works (empty slots)
□ Version checker shows correct branch
□ Version checker shows correct colors
□ No console errors on load
□ No console spam from debug logs
□ ESLint passes (0 errors)
□ Prettier formatting applied
□ Mirror build completes (npm run build)
□ Modular build completes (npm run build:esbuild)
□ dist/mgtools.user.js size ~1.5MB
□ dist/mgtools.esbuild.user.js size ~120KB

==============================================
END OF DEPLOYMENT INSTRUCTIONS
==============================================
import js from '@eslint/js';
import eslintConfigPrettier from 'eslint-config-prettier';

export default [
  js.configs.recommended,
  eslintConfigPrettier,
  {
    ignores: ['node_modules/**', '*.backup', 'dist/**'],
  },
  {
    files: ['**/*.js'],
    languageOptions: {
      ecmaVersion: 2021,
      sourceType: 'script',
      globals: {
        // Tampermonkey/Greasemonkey globals
        GM_setValue: 'readonly',
        GM_getValue: 'readonly',
        GM_deleteValue: 'readonly',
        GM_addStyle: 'readonly',
        GM_addElement: 'readonly',
        GM_xmlhttpRequest: 'readonly',
        unsafeWindow: 'readonly',
        GM_info: 'readonly',
        // Application globals
        CONFIG: 'readonly',
        Logger: 'readonly',
        Storage: 'readonly',
        UnifiedState: 'writable',
        StorageManager: 'readonly',
        productionLog: 'readonly',
        productionWarn: 'readonly',
        productionError: 'readonly',
        logInfo: 'readonly',
        logWarn: 'readonly',
        logError: 'readonly',
        debugLog: 'readonly',
        CompatibilityMode: 'readonly',
        scheduleReload: 'readonly',
        // Browser globals
        window: 'readonly',
        document: 'readonly',
        console: 'readonly',
        setTimeout: 'readonly',
        setInterval: 'readonly',
        clearTimeout: 'readonly',
        clearInterval: 'readonly',
        Promise: 'readonly',
        Set: 'readonly',
        Map: 'readonly',
        WeakMap: 'readonly',
        Error: 'readonly',
        Date: 'readonly',
        Math: 'readonly',
        JSON: 'readonly',
        Object: 'readonly',
        Array: 'readonly',
        String: 'readonly',
        Number: 'readonly',
        Boolean: 'readonly',
        RegExp: 'readonly',
        navigator: 'readonly',
        location: 'readonly',
        localStorage: 'readonly',
        sessionStorage: 'readonly',
        Document: 'readonly',
        MutationObserver: 'readonly',
        URL: 'readonly',
        fetch: 'readonly',
        AbortSignal: 'readonly',
        AbortController: 'readonly',
        performance: 'readonly',
        crypto: 'readonly',
        alert: 'readonly',
        confirm: 'readonly',
        requestIdleCallback: 'readonly',
        requestAnimationFrame: 'readonly',
        cancelAnimationFrame: 'readonly',
        queueMicrotask: 'readonly',
        Blob: 'readonly',
        innerWidth: 'readonly',
        innerHeight: 'readonly',
        ResizeObserver: 'readonly',
        Image: 'readonly',
        Element: 'readonly',
        Audio: 'readonly',
        KeyboardEvent: 'readonly',
        Event: 'readonly',
        MouseEvent: 'readonly',
        FileReader: 'readonly',
        HTMLElement: 'readonly',
        Node: 'readonly',
        WebSocket: 'readonly',
        // Script-specific functions (may be defined later in file)
        getRoomStatusTabContent: 'readonly',
        inventory: 'readonly',
        setupRoomJoinButtons: 'readonly',
        setupRoomsTabButtons: 'readonly',
        logDebug: 'readonly',
        MGA_Platform: 'writable',
        MGAIsolationSystem: 'readonly',
        timerManager: 'readonly',
        wrapLogsArray: 'readonly',
        MGA_safeSave: 'readonly',
        MGA_saveJSON: 'readonly',
        MGA_loadJSON: 'readonly',
      },
    },
    rules: {
      // Airbnb-inspired rules adapted for userscripts
      'no-console': 'off',
      'no-unused-vars': ['warn', {
        argsIgnorePattern: '^_',
        varsIgnorePattern: '^_',
        caughtErrorsIgnorePattern: '^_'
      }],
      'max-len': ['warn', {
        code: 120,
        ignoreStrings: true,
        ignoreTemplateLiterals: true,
        ignoreUrls: true,
        ignoreComments: true
      }],
      'no-use-before-define': ['error', {
        functions: false,
        classes: true,
        variables: true
      }],
      'prefer-arrow-callback': 'off',
      'func-names': 'off',
      'no-plusplus': ['warn', { allowForLoopAfterthoughts: true }], // Downgrade to warning
      'no-param-reassign': ['error', { props: false }],
      'no-restricted-syntax': ['error', 'ForInStatement', 'LabeledStatement', 'WithStatement'],
      'consistent-return': 'off',
      'no-underscore-dangle': 'off',
      'no-shadow': 'off',
      'prefer-destructuring': 'off',
      'no-continue': 'off',
      'no-await-in-loop': 'off',
      'indent': 'off', // Let Prettier handle indentation
      'quotes': ['error', 'single', { avoidEscape: true, allowTemplateLiterals: true }],
      'semi': ['error', 'always'],
      'comma-dangle': ['error', 'never'],
      'object-curly-spacing': ['error', 'always'],
      'arrow-parens': ['error', 'as-needed'],
      'prefer-const': 'warn',
      'no-var': 'error',
      'eqeqeq': ['error', 'always', { null: 'ignore' }],
      'no-multi-spaces': 'error',
      'no-trailing-spaces': 'error',
      'space-before-function-paren': 'off', // Let Prettier handle this
      'keyword-spacing': 'error',
      'space-infix-ops': 'error',
      'brace-style': ['error', '1tbs', { allowSingleLine: true }],
      'no-empty': ['warn', { allowEmptyCatch: true }], // Allow empty catch blocks with comment
    },
  },
  // ES Module configuration for src/ directory
  {
    files: ['src/**/*.js'],
    languageOptions: {
      ecmaVersion: 2021,
      sourceType: 'module', // Enable ES modules for src directory
      globals: {
        // Browser globals
        window: 'readonly',
        document: 'readonly',
        console: 'readonly',
        setTimeout: 'readonly',
        setInterval: 'readonly',
        clearTimeout: 'readonly',
        clearInterval: 'readonly',
        Promise: 'readonly',
        Set: 'readonly',
        Map: 'readonly',
        WeakMap: 'readonly',
        Error: 'readonly',
        Date: 'readonly',
        Math: 'readonly',
        JSON: 'readonly',
        Object: 'readonly',
        Array: 'readonly',
        String: 'readonly',
        Number: 'readonly',
        Boolean: 'readonly',
        RegExp: 'readonly',
        Blob: 'readonly',
        URL: 'readonly',
        alert: 'readonly',
        confirm: 'readonly',
        HTMLElement: 'readonly',
        Node: 'readonly',
        WebSocket: 'readonly',
        navigator: 'readonly',
        location: 'readonly',
        localStorage: 'readonly',
        sessionStorage: 'readonly',
        Document: 'readonly',
        MutationObserver: 'readonly',
        fetch: 'readonly',
        AbortSignal: 'readonly',
        AbortController: 'readonly',
        performance: 'readonly',
        crypto: 'readonly',
        requestIdleCallback: 'readonly',
        requestAnimationFrame: 'readonly',
        cancelAnimationFrame: 'readonly',
        queueMicrotask: 'readonly',
        innerWidth: 'readonly',
        innerHeight: 'readonly',
        ResizeObserver: 'readonly',
        Image: 'readonly',
        Element: 'readonly',
        Audio: 'readonly',
        KeyboardEvent: 'readonly',
        Event: 'readonly',
        MouseEvent: 'readonly',
        FileReader: 'readonly',
        // Tampermonkey/Greasemonkey API
        GM_setValue: 'readonly',
        GM_getValue: 'readonly',
        GM_deleteValue: 'readonly',
        GM_addStyle: 'readonly',
        GM_addElement: 'readonly',
        GM_xmlhttpRequest: 'readonly',
        unsafeWindow: 'readonly',
        GM_info: 'readonly',
        // Application globals that will be available at runtime
        UnifiedState: 'readonly',
        MGA_saveJSON: 'readonly',
        MGA_loadJSON: 'readonly',
        productionLog: 'readonly',
        productionWarn: 'readonly',
        productionError: 'readonly',
        logInfo: 'readonly',
        logWarn: 'readonly',
        logError: 'readonly',
        debugLog: 'readonly',
        targetWindow: 'readonly',
        targetDocument: 'readonly',
      },
    },
  },
  // Node.js scripts configuration
  {
    files: ['scripts/**/*.mjs', '*.mjs'],
    languageOptions: {
      ecmaVersion: 2022, // Support top-level await
      sourceType: 'module',
      globals: {
        // Node.js globals
        console: 'readonly',
        process: 'readonly',
        Buffer: 'readonly',
        __dirname: 'readonly',
        __filename: 'readonly',
        global: 'readonly',
        module: 'readonly',
        require: 'readonly',
        exports: 'readonly',
        setTimeout: 'readonly',
        setInterval: 'readonly',
        clearTimeout: 'readonly',
        clearInterval: 'readonly',
        setImmediate: 'readonly',
        clearImmediate: 'readonly',
        Promise: 'readonly',
        Set: 'readonly',
        Map: 'readonly',
        WeakMap: 'readonly',
        WeakSet: 'readonly',
        Error: 'readonly',
        Date: 'readonly',
        Math: 'readonly',
        JSON: 'readonly',
        Object: 'readonly',
        Array: 'readonly',
        String: 'readonly',
        Number: 'readonly',
        Boolean: 'readonly',
        RegExp: 'readonly',
        Symbol: 'readonly',
        BigInt: 'readonly',
        URL: 'readonly',
        URLSearchParams: 'readonly',
      },
    },
  },
];
